'.source.hdf':

  'HDF header':
    'prefix': 'hdf'
    'body': 'hdf.DisplayName="${1:Display Name}"
\nhdf.TypicalPlatform="${2:Typical Platform (e.g.: HP ProLiant)}"
\nhdf.ReliesOn="${3:Instrumentation layer (prerequisites)}"
\nhdf.AppliesToOS="${4:NT,Linux,OOB,RS6000,HP,Solaris,OSF1,VMS}"
\nhdf.Comments="${5:This connector discovers the <components> of <platform> through <prerequisites>.}"
\nhdf.RemoteSupport="${6:true}"
\nhdf.LocalSupport="${7:true}"
\nhdf.Supersedes="${8:MS_HW_connector1.hdf,MS_HW_connector2.hdf}"
\n$9'

  '#include':
    'prefix': '#in'
    'body': '#include ${1:MS_HW_connector.hdf}$2'

  '#define':
    'prefix': '#de'
    'body': '#define ${1:CONSTANT_NAME} ${2:Constant Value}$3'

  'sudo Entry':
    'prefix': 'sudo'
    'body': 'Sudo(${1:1}).Command="${2:command}"$3'

#
# Detection
#

  'Detection SNMP Get':
    'prefix': 'detsnmpget'
    'body': 'Detection.Criteria(${1:1}).Type="SNMP"
\nDetection.Criteria(${1:1}).SnmpGet="${2:OID}"
\nDetection.Criteria(${1:1}).ExpectedResult="${3:Regex}"
\n$4'

  'Detection SNMP GetNext':
    'prefix': 'detsnmpgetnext'
    'body': 'Detection.Criteria(${1:1}).Type="SNMP"
\nDetection.Criteria(${1:1}).SnmpGetNext="${2:OID}"
\nDetection.Criteria(${1:1}).ExpectedResult="${3:Regex}"
\n$4'

  'Detection OS':
    'prefix': 'detos'
    'body': 'Detection.Criteria(${1:1}).Type="OS"
\nDetection.Criteria(${1:1}).KeepOnly="${2:NT,Linux,OOB,RS6000,HP,Solaris,OSF1,VMS}"
\nDetection.Criteria(${1:1}).Exclude="${3:NT,Linux,OOB,RS6000,HP,Solaris,OSF1,VMS}"
\n$4'

  'Detection Windows Service':
    'prefix': 'detservice'
    'body': 'Detection.Criteria(${1:1}).Type="Service"
\nDetection.Criteria(${1:1}).ServiceName="${2:ServiceName}"
\n$3'

  'Detection Process':
    'prefix': 'detprocess'
    'body': 'Detection.Criteria(${1:1}).Type="Process"
\nDetection.Criteria(${1:1}).ProcessCommandLine="${2:Command Line}"
\n$3'

  'Detection WMI':
    'prefix': 'detwmi'
    'body': 'Detection.Criteria(${1:1}).Type="WMI"
\nDetection.Criteria(${1:1}).WbemNamespace="${2:Automatic}"
\nDetection.Criteria(${1:1}).WbemQuery="${3:SELECT Property FROM Class}"
\nDetection.Criteria(${1:1}).ExpectedResult="${4:Regex}"
\n$5'

  'Detection WBEM':
    'prefix': 'detwbem'
    'body': 'Detection.Criteria(${1:1}).Type="WBEM"
\nDetection.Criteria(${1:1}).WbemNamespace="${2:Automatic}"
\nDetection.Criteria(${1:1}).WbemQuery="${3:SELECT Property FROM Class}"
\nDetection.Criteria(${1:1}).ExpectedResult="${4:Regex}"
\n$5'

  'Detection Command Line':
    'prefix': 'detcli'
    'body': 'Detection.Criteria(${1:1}).Type="OsCommand"
\nDetection.Criteria(${1:1}).CommandLine="${2:Command To Execute}"
\n//Detection.Criteria(${1:1}).Timeout="${3:30}"
\nDetection.Criteria(${1:1}).ExpectedResult="${4:Regex}"
\n$5'

  'Detection Interactive SSH':
    'prefix': 'detinteractive'
    'body': 'Detection.Criteria(${1:1}).Type="TelnetInteractive"
\nDetection.Criteria(${1:1}).ExpectedResult="${2:Regex}"
\n$3'

  'Detection Cisco UCS':
    'prefix': 'detucs'
    'body': 'Detection.Criteria(${1:1}).Type="UCS"
\nDetection.Criteria(${1:1}).Query="${2:SELECT property FROM class}"
\nDetection.Criteria(${1:1}).ExpectedResult="${3:Regex}"
\n$4'

  'Detection IPMI':
    'prefix': 'detipmi'
    'body': 'Detection.Criteria(${1:1}).Type="IPMI"
\n$2'

  'Detection HTTP (REST)':
    'prefix': 'dethttp'
    'body': 'Detection.Criteria(${1:1}).Type="HTTP"
\nDetection.Criteria(${1:1}).Url="${2:/path/to/query.php?format=json}"
\nDetection.Criteria(${1:1}).Method="${3:GET}"
\nDetection.Criteria(${1:1}).Header="${4:Content-type: application/json}"
\nDetection.Criteria(${1:1}).Body="${5:{ resource=""/""; deep = false; }}"
\nDetection.Criteria(${1:1}).AuthenticationToken="${6:%Enclosure.Discovery.Source(1)%}"
\nDetection.Criteria(${1:1}).ResultContent="${7:body}"
\nDetection.Criteria(${1:1}).ExpectedResult="${8:Regex}"
\n$9'

#
# Enclosure
#

  'Discovery Enclosure':
    'prefix': 'discencl'
    'body': 'Enclosure.Discovery.InstanceTable=%Enclosure.Discovery.Source(_x_)%
\nEnclosure.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.Vendor=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.Type=InstanceTable.Column(_x_) // e.g.: Computer, Storage, Switch, Blade Chassis, Chassis
\nEnclosure.Discovery.Instance.Model=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.SerialNumber=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.BIOSVersion=InstanceTable.Column(_x_)
\nEnclosure.Discovery.Instance.DeviceHostname=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.ParameterActivation.IntrusionStatus=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.ParameterActivation.PowerConsumption=InstanceTable.Column(_x_)
\n//Enclosure.Discovery.Instance.ParameterActivation.EnergyUsage=InstanceTable.Column(_x_)
\n'

  'Collect Enclosure':
    'prefix': 'collencl'
    'body': 'Enclosure.Collect.Type="MultiInstance" // or MonoInstance
\n
\nEnclosure.Collect.ValueTable=%Enclosure.Collect.Source(_x_)%
\nEnclosure.Collect.DeviceID=ValueTable.Column(_x_)
\nEnclosure.Collect.Status=ValueTable.Column(_x_)
\nEnclosure.Collect.StatusInformation=ValueTable.Column(_x_)
\nEnclosure.Collect.IntrusionStatus=ValueTable.Column(_x_)
\nEnclosure.Collect.PowerConsumption=ValueTable.Column(_x_)
\nEnclosure.Collect.EnergyUsage=ValueTable.Column(_x_)
\n'

#
# Batteries
#

  'Discovery Battery':
    'prefix': 'discbat'
    'body': 'Battery.Discovery.InstanceTable=%Battery.Discovery.Source(_x_)%
\nBattery.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.ControllerNumber=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.Vendor=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.Model=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.Type=InstanceTable.Column(_x_)
\nBattery.Discovery.Instance.Chemistry=InstanceTable.Column(_x_)
\n//Battery.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//Battery.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//Battery.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//Battery.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(_x_)
\n//Battery.Discovery.Instance.ParameterActivation.Charge=InstanceTable.Column(_x_)
'

  'Collect Battery':
    'prefix': 'collbat'
    'body': 'Battery.Collect.Type="MultiInstance" // or MonoInstance
\n
\nBattery.Collect.ValueTable=%Battery.Collect.Source(_x_)%
\nBattery.Collect.DeviceID=ValueTable.Column(_x_)
\nBattery.Collect.Status=ValueTable.Column(_x_)
\nBattery.Collect.StatusInformation=ValueTable.Column(_x_)
\nBattery.Collect.Charge=ValueTable.Column(_x_)
\n'

#
# Blades
#

  'Discovery Blade':
    'prefix': 'discblade'
    'body': 'Blade.Discovery.InstanceTable=%Blade.Discovery.Source(_x_)%
\nBlade.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.BladeName=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.BladeModel=InstanceTable.Column(_x_)
\nBlade.Discovery.Instance.SerialNumber=InstanceTable.Column(_x_)
\n//Blade.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//Blade.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//Blade.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//Blade.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(_x_)
\n//Blade.Discovery.Instance.ParameterActivation.PowerState=InstanceTable.Column(_x_)
'

  'Collect Blade':
    'prefix': 'collblade'
    'body': 'Blade.Collect.Type="MultiInstance" // or MonoInstance
\n
\nBlade.Collect.ValueTable=%Blade.Collect.Source(_x_)%
\nBlade.Collect.DeviceID=ValueTable.Column(_x_)
\nBlade.Collect.Status=ValueTable.Column(_x_)
\nBlade.Collect.StatusInformation=ValueTable.Column(_x_)
\nBlade.Collect.PowerState=ValueTable.Column(_x_)
\n'

#
# CPU Cores
#

  'Discovery CPU Core':
    'prefix': 'disccore'
    'body': 'CpuCore.Discovery.InstanceTable=%CpuCore.Discovery.Source(_x_)%
\nCpuCore.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nCpuCore.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nCpuCore.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.ParameterActivation.UsedTimePercent=InstanceTable.Column(_x_)
\n//CpuCore.Discovery.Instance.ParameterActivation.CurrentSpeed=InstanceTable.Column(_x_)
'

  'Collect CPU Core':
    'prefix': 'collcore'
    'body': 'CpuCore.Collect.Type="MultiInstance" // or MonoInstance
\n
\nCpuCore.Collect.ValueTable=%CpuCore.Collect.Source(_x_)%
\nCpuCore.Collect.DeviceID=ValueTable.Column(_x_)
\nCpuCore.Collect.Status=ValueTable.Column(_x_)
\nCpuCore.Collect.StatusInformation=ValueTable.Column(_x_)
\nCpuCore.Collect.UsedTimePercent=ValueTable.Column(_x_)
\nCpuCore.Collect.CurrentSpeed=ValueTable.Column(_x_)
\n'

#
# CPU
#

  'Discovery CPU':
    'prefix': 'disccpu'
    'body': 'Cpu.Discovery.InstanceTable=%Cpu.Discovery.Source(_x_)%
\nCpu.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.Vendor=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.Model=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.MaximumSpeed=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.PowerConsumption=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.CorrectedErrorWarningThreshold=InstanceTable.Column(_x_)
\nCpu.Discovery.Instance.CorrectedErrorAlarmThreshold=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.ParameterActivation.Status=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.ParameterActivation.PredictedFailure=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.ParameterActivation.CorrectedErrorCount=InstanceTable.Column(_x_)
\n//Cpu.Discovery.Instance.ParameterActivation.CurrentSpeed=InstanceTable.Column(_x_)
'

  'Collect CPU':
    'prefix': 'collcpu'
    'body': 'Cpu.Collect.Type="MultiInstance" // or MonoInstance
\n
\nCpu.Collect.ValueTable=%Cpu.Collect.Source(_x_)%
\nCpu.Collect.DeviceID=ValueTable.Column(_x_)
\nCpu.Collect.Status=ValueTable.Column(_x_)
\nCpu.Collect.StatusInformation=ValueTable.Column(_x_)
\nCpu.Collect.PredictedFailure=ValueTable.Column(_x_)
\nCpu.Collect.CorrectedErrorCount=ValueTable.Column(_x_)
\nCpu.Collect.CurrentSpeed=ValueTable.Column(_x_)
\n'

#
# Disk Controller
#

  'Discovery Disk Controller':
    'prefix': 'disccont'
    'body': 'DiskController.Discovery.InstanceTable=%DiskController.Discovery.Source(_x_)%
\nDiskController.Discovery.Instance.DeviceID=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.DisplayID=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.AttachedToDeviceID=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.AttachedToDeviceType=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.ControllerNumber=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.Vendor=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.Model=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.FirmwareVersion=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.BIOSVersion=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.DriverVersion=InstanceTable.Column(_x_)
\nDiskController.Discovery.Instance.SerialNumber=InstanceTable.Column(_x_)
\n//DiskController.Discovery.Instance.AdditionalInformation1=InstanceTable.Column(_x_)
\n//DiskController.Discovery.Instance.AdditionalInformation2=InstanceTable.Column(_x_)
\n//DiskController.Discovery.Instance.AdditionalInformation3=InstanceTable.Column(_x_)
\n//DiskController.Discovery.Instance.ParameterActivation.ControllerStatus=InstanceTable.Column(_x_)
\n//DiskController.Discovery.Instance.ParameterActivation.BatteryStatus=InstanceTable.Column(_x_)
'

  'Collect Disk Controller':
    'prefix': 'collcont'
    'body': 'DiskController.Collect.Type="MultiInstance" // or MonoInstance
\n
\nDiskController.Collect.ValueTable=%DiskController.Collect.Source(_x_)%
\nDiskController.Collect.DeviceID=ValueTable.Column(_x_)
\nDiskController.Collect.ControllerStatus=ValueTable.Column(_x_)
\nDiskController.Collect.StatusInformation=ValueTable.Column(_x_)
\nDiskController.Collect.BatteryStatus=ValueTable.Column(_x_)
\n'

#
# Fan
#
